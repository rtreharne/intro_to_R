{
    "collab_server" : "",
    "contents" : "# TASK 9.1: TOO MANY ELEPHANTS\n\n# STEP 1. Create a new directory (folder) in your R project directory.\n\n# STEP 2. Download the \"lots_of_elephants.zip\" file to your new directory and extract the files.\n\n# Create a new varibale \"dir\" that contains the path to your extracted directory (relative\n# respect to your overall project directory)\ndir = \"week_9/9_1_too_many_elephants/lots_of_elephants/\"\n\n# Create a new variable \"files\" and assign it a list of all filenames in your extracted directory\nfiles <- list.files(dir)\n\n# OK. We're now going to create a \"function\" called \"getGradient\"that performs a \n# straignt line fit (linear regression) for a specified file in the \"lots_of_elephants\" \n# directory and returns the filename and the gradient for that file.\n# between weight and time\n\n# Define a function like this ...\ngetGradient <- function(dir, fname){\n  # construct the path that tells us where the data file is\n  # e.g. \"week_9/9_1_too_many_elephants/lots_of elephants/elephant_100822\"\n  path = sprintf(\"%s%s\", dir, fname)\n  df <- read.csv(path) # read the data file like you did in last week's workshop\n  fit <- lm(weight_kg ~ time_months, data = df) # create a linear model\n  return(c(fname, fit$coeff[2])) # return the filename and gradient as a vector, i.e. (fname, gradient)\n}\n\n# Test your function using a filename\ngetGradient(dir, \"elephant_100822\")\n\n# Now we're going to create a loops that calls the function above with a new\n# filename each time and adds the calculated gradient to a vector called \"gradVals\"\n\n# Create an empty vector\ngradVals <- c()\n\n# loop through your \"files\" list like this ...\nfor (file in files) {\n  fileGrads <- getGradient(dir, file) # for each file call the \"getGradient\" gradient function\n  gradVal <- c(gradVal, as.numeric(fileGrad[2])) # add the calculate gradient to the gradVal vector\n}\n\nmax(gradVasl) # tells us the maximum gradient\nwhich.max(gradVals) # tells us the index of the maximum value\n\n# we can use this index to tell us the filename the corresponds to the file with the\n# maximum gradient, i.e. the elephant that put weight on at the fastest rate.\nfiles[which.max(gradVals)] \n\n",
    "created" : 1573806635746.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4257785647",
    "id" : "22425E4C",
    "lastKnownWriteTime" : 1573810562,
    "last_content_update" : 1573810562184,
    "path" : "~/Documents/intro_to_R/week_9/9_1_too_many_elephants/too_many_elephants.R",
    "project_path" : "week_9/9_1_too_many_elephants/too_many_elephants.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}